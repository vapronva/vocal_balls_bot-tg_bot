stages:
  - test
  - build-image
  - post-test
  - deploy

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/SAST-IaC.latest.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
- template: Security/Container-Scanning.gitlab-ci.yml

build-docker-image:
  stage: build-image
  image: docker:20-git
  script:
    - docker build -t $CI_REGISTRY_IMAGE/bot:latest .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker image push $CI_REGISTRY_IMAGE/bot:latest
  rules:
  - if: $CI_COMMIT_BRANCH == "main"
    exists:
    - Dockerfile
    changes:
    - "*.py"
    - "**/*.py"
    - Dockerfile
    - .gitlab-ci.yml
    - "locales/*.json"

container_scanning:
  stage: post-test
  variables:
    CS_DISABLE_DEPENDENCY_LIST: "true"
    CS_DEFAULT_BRANCH_IMAGE: $CI_REGISTRY_IMAGE/bot:latest
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/bot
    CI_APPLICATION_TAG: "latest"
    CS_DISABLE_LANGUAGE_VULNERABILITY_SCAN: "false"
    CS_ANALYZER_IMAGE: "registry.gitlab.com/security-products/container-scanning/grype:5"
    SECURE_LOG_LEVEL: "debug"

deploy-job:
  stage: deploy
  image: docker:20-git
  script:
    - docker-compose -f 'docker-compose.yml' --project-name 'bomedb-vocalballsbot-vapronva' down
    - docker-compose -f 'docker-compose.yml' --project-name 'bomedb-vocalballsbot-vapronva' up -d
  rules:
  - if: $CI_COMMIT_BRANCH == "main"
    exists:
    - docker-compose.yml
    changes:
    - docker-compose.yml
    - Dockerfile
    - .gitlab-ci.yml
    - "**/*.py"
    - "locales/*.json"
